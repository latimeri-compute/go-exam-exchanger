# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    container_name: gw-wallet
    build:
      context: .
      target: final
    env_file:
      - config.env
    ports:
      - 4001:4001
    depends_on:
      - db_wallet

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
  db_wallet:
    container_name: db_wallet

    image: postgres:17.5
    restart: always
    env_file:
      - config.env
    volumes:
      - ./internal/storages/postgres/database_setup:/docker-entrypoint-initdb.d
    ports:
      - 5430:5432
volumes:
  db-data:
secrets:
  db-password:
    file: db/password.txt

