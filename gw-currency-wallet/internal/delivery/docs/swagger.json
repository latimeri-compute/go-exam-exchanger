{
    "swagger": "2.0",
    "info": {
        "description": "wallet API supporting exchange between currencies",
        "title": "wallet API",
        "contact": {},
        "version": "0.9"
    },
    "basePath": "/api/v1",
    "paths": {
        "/balance": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "returns user's balance",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"BEARER {JWT}\"",
                        "description": "JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns balance",
                        "schema": {
                            "$ref": "#/definitions/delivery.balanceResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorUnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/deposit": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "top up user's balance",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"BEARER {JWT}\"",
                        "description": "JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "top up request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.fundsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns updated balance",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorUnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/exchange": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exchange"
                ],
                "summary": "exchange funds",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"BEARER {JWT}\"",
                        "description": "JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Exchange funds request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.exchangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns updated balance and exchanged amount",
                        "schema": {
                            "$ref": "#/definitions/delivery.exchangeResponse"
                        }
                    },
                    "400": {
                        "description": "Insufficient funds or invalid currencies",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorInsufficientFunds"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials\"\texample(error:Unauthorized)",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorUnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/exchange/rates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exchange"
                ],
                "summary": "returns exchange rates",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"BEARER {JWT}\"",
                        "description": "JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns exchange rates",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorUnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "produces JWT token on successfull login",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.loginJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/delivery.messageResponse"
                        }
                    },
                    "400": {
                        "description": "JSON fields didn't pass validation",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Malformed json or invalid fields",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "create new user",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.registerJSON"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created",
                        "schema": {
                            "$ref": "#/definitions/delivery.messageResponse"
                        }
                    },
                    "400": {
                        "description": "JSON fields didn't pass validation",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorResponse"
                        }
                    },
                    "422": {
                        "description": "Malformed json or invalid fields",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorResponse"
                        }
                    }
                }
            }
        },
        "/withdraw": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "withdraw from user's balance",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"BEARER {JWT}\"",
                        "description": "JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "withdrawal request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delivery.fundsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns updated balance",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/delivery.errorUnauthorizedResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "delivery.balance": {
            "type": "object",
            "properties": {
                "EUR": {
                    "type": "number"
                },
                "RUB": {
                    "type": "number"
                },
                "USD": {
                    "type": "number"
                }
            }
        },
        "delivery.balanceResponse": {
            "type": "object",
            "properties": {
                "EUR": {
                    "type": "number",
                    "example": 10
                },
                "RUB": {
                    "type": "number",
                    "example": 45.5
                },
                "USD": {
                    "type": "number",
                    "example": 120
                }
            }
        },
        "delivery.errorInsufficientFunds": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Insufficient funds or invalid currencies"
                }
            }
        },
        "delivery.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "delivery.errorUnauthorizedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Unauthorized"
                }
            }
        },
        "delivery.exchangeRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "from_currency": {
                    "type": "string"
                },
                "to_currency": {
                    "type": "string"
                }
            }
        },
        "delivery.exchangeResponse": {
            "type": "object",
            "properties": {
                "exchanged_amount": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "new_balance": {
                    "$ref": "#/definitions/delivery.balance"
                }
            }
        },
        "delivery.fundsRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 234.56
                },
                "currency": {
                    "description": "(USD, RUB, EUR)",
                    "type": "string",
                    "example": "rub"
                }
            }
        },
        "delivery.loginJSON": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "pa$$word"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "delivery.messageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "delivery.registerJSON": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "password": {
                    "type": "string",
                    "example": "pa$$word"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        }
    }
}