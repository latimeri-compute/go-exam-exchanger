basePath: /api/v1
definitions:
  delivery.balance:
    properties:
      EUR:
        type: number
      RUB:
        type: number
      USD:
        type: number
    type: object
  delivery.balanceResponse:
    properties:
      EUR:
        example: 10
        type: number
      RUB:
        example: 45.5
        type: number
      USD:
        example: 120
        type: number
    type: object
  delivery.exchangeRequest:
    properties:
      amount:
        type: number
      from_currency:
        type: string
      to_currency:
        type: string
    type: object
  delivery.exchangeResponse:
    properties:
      exchanged_amount:
        type: number
      message:
        type: string
      new_balance:
        $ref: '#/definitions/delivery.balance'
    type: object
  delivery.fundsRequest:
    properties:
      amount:
        example: 234.56
        type: number
      currency:
        description: (USD, RUB, EUR)
        example: rub
        type: string
    type: object
  delivery.loginJSON:
    properties:
      password:
        example: pa$$word
        type: string
      username:
        example: admin
        type: string
    type: object
  delivery.registerJSON:
    properties:
      email:
        example: test@test.com
        type: string
      password:
        example: pa$$word
        type: string
      username:
        example: admin
        type: string
    type: object
  swagger.ErrorInsufficientFunds:
    properties:
      error:
        example: Insufficient funds or invalid currencies
        type: string
    type: object
  swagger.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  swagger.ErrorUnauthorizedResponse:
    properties:
      error:
        example: Unauthorized
        type: string
    type: object
  swagger.MessageResponse:
    properties:
      message:
        type: string
    type: object
  swagger.ReturnUpdatedBalance:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: wallet API supporting exchange between currencies
  title: wallet API
  version: "0.9"
paths:
  /balance:
    get:
      consumes:
      - application/json
      parameters:
      - description: JWT
        example: '"Bearer {JWT}"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns balance
          schema:
            $ref: '#/definitions/delivery.balanceResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/swagger.ErrorUnauthorizedResponse'
      summary: returns user's balance
      tags:
      - balance
  /deposit:
    post:
      consumes:
      - application/json
      parameters:
      - description: JWT
        example: '"Bearer {JWT}"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: top up request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/delivery.fundsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: returns updated balance
          schema:
            $ref: '#/definitions/swagger.ReturnUpdatedBalance'
        "400":
          description: Incomplete request, malformed JSON or disallowed fields
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/swagger.ErrorUnauthorizedResponse'
      summary: top up user's balance
      tags:
      - balance
  /exchange:
    post:
      consumes:
      - application/json
      parameters:
      - description: JWT
        example: '"BEARER {JWT}"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: Exchange funds request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/delivery.exchangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns updated balance and exchanged amount
          schema:
            $ref: '#/definitions/delivery.exchangeResponse'
        "400":
          description: JSON fields didn't pass validation
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/swagger.ErrorUnauthorizedResponse'
        "422":
          description: Incomplete request, malformed JSON or disallowed fields
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
      summary: exchange funds
      tags:
      - exchange
  /exchange/rates:
    get:
      consumes:
      - application/json
      parameters:
      - description: JWT
        example: '"BEARER {JWT}"'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns exchange rates
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/swagger.ErrorUnauthorizedResponse'
      summary: returns exchange rates
      tags:
      - exchange
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/delivery.loginJSON'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/swagger.MessageResponse'
        "400":
          description: JSON fields didn't pass validation
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "422":
          description: Malformed json or invalid fields
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
      summary: produces JWT token on successfull login
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/delivery.registerJSON'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            $ref: '#/definitions/swagger.MessageResponse'
        "400":
          description: JSON fields didn't pass validation
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "422":
          description: Malformed json or invalid fields
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
      summary: create new user
      tags:
      - users
  /withdraw:
    post:
      consumes:
      - application/json
      parameters:
      - description: JWT
        example: '"Bearer {JWT}"'
        in: header
        name: Authorization
        required: true
        type: string
      - description: withdrawal request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/delivery.fundsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: returns updated balance
          schema:
            $ref: '#/definitions/swagger.ReturnUpdatedBalance'
        "400":
          description: JSON fields didn't pass validation
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/swagger.ErrorUnauthorizedResponse'
        "422":
          description: Incomplete request, malformed JSON or disallowed fields
          schema:
            $ref: '#/definitions/swagger.ErrorResponse'
      summary: withdraw from user's balance
      tags:
      - balance
swagger: "2.0"
